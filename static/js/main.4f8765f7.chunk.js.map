{"version":3,"sources":["api/user.ts","api/index.ts","ui/Button/styles.ts","ui/Button/index.tsx","ui/Input/styles.ts","ui/Input/index.tsx","modules/Autentication/main-form/styles.ts","modules/Autentication/main-form/index.tsx","modules/Autentication/CodeAcces/index.tsx","reducers/index.ts","sagas/index.ts","store/index.ts","ui/Layout/styles.ts","ui/Layout/index.tsx","pages/code.acces.page.tsx","modules/Autentication/connexion/index.tsx","pages/connexion.page.tsx","utils/api.ts","modules/Dashboard/media/index.tsx","modules/Dashboard/feed-item/styles.ts","modules/Dashboard/feed-item/index.tsx","modules/Dashboard/feed-list/styles.ts","modules/Dashboard/feed-list/index.tsx","pages/dashboard.page.tsx","modules/Autentication/inscription/index.tsx","pages/inscription.page.tsx","modules/Autentication/Password/styles.ts","modules/Autentication/Password/index.tsx","pages/password.page.tsx","App.tsx","index.tsx"],"names":["User","user","id","lastName","firstName","email","password","this","v4","getUsers","users","localStorage","getItem","JSON","parse","userExists","some","item","ButtonWrapper","styled","button","props","variant","color","rouned","Button","passedColor","InputWrapper","input","Input","type","name","rest","MainFormWrapper","div","LogoWrapper","FormUnputsWrapper","ActionsWrapper","MainForm","src","alt","back","title","description","children","CodeAccess","useState","codeAcces","setCodeAcces","history","useHistory","value","placeholder","onChange","currentTarget","onClick","push","alert","initialState","isLoggedIn","mainReducer","state","action","sign_in","rootSaga","all","put","takeEvery","sagaMiddleware","createSagaMiddleware","store","middlewares","createStore","rootReducer","applyMiddleware","run","configureStore","MainLayoutWrapper","DashboardLayoutWrapper","TopBarWrapper","SideBarWrapper","ContentWrapper","ProfileWrapper","ProfileAvatar","MainLayout","Profile","getState","size","toLocaleUpperCase","DashboardLayout","style","width","CodeAccesPage","stateCopy","setStateCopy","useEffect","Connexion","setEmail","to","margin","textDecoration","pathname","ConnexionPage","axios","create","baseURL","Media","FeedItemWrapper","CardHeaderWrapper","CardSubHeaderWrapper","CardBodyWrapper","CardFooterWrapper","DividerWrapper","hr","TitleAndAvatarHeaderWrapper","AvatarWrapper","TitleHeaderWrapper","TitleWrapper","AuthorOrDateWrapper","AuthorAndDateWrapper","strong","TitleSubHeaderWrapper","URLWrapper","a","FeedItem","feed","source","author","moment","publishedAt","format","target","href","url","replace","urlToImage","content","FeedWrappper","FeedList","page","setPage","feeds","setFeeds","count","setCount","fetchData","api","get","data","totalResults","setTimeout","articles","handleFetch","dataLength","next","hasMore","length","loader","onScroll","alignItems","justifyContent","map","DashboardPage","console","log","Inscrpiton","setState","handleChange","InscriptionPage","EmailWrapper","Password","location","useLocation","setPassword","Back","handleback","registered","newUser","status","setItem","stringify","register","dispatch","loggedIn","form","find","login","PasswordPage","client","QueryClient","App","QueryClientProvider","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f8765f7.chunk.js","sourcesContent":["import { v4 } from \"uuid\";\nimport { IUser } from \"../types\";\n\nexport class User {\n  id: string;\n  lastName: string;\n  firstName: string;\n  email: string;\n  password: string;\n  constructor(\n    user: IUser\n  ) {\n      this.id = v4();\n    this.firstName = user.firstName;\n    this.lastName = user.lastName;\n    this.email = user.email;\n    this.password = user.password;\n  }\n}\n","import { IUser } from \"../types\";\nimport { User } from \"./user\";\n\nexport const getUsers = () => {\n    const users = localStorage.getItem(\"users\");\n    return users ? (JSON.parse(users) as User[]) : [];\n}\n\nexport const login = (form: {password: string, email: string}) => {\n    const users = getUsers();\n    if (users.length === 0) {\n        return {\n            status: false,\n            user: null\n        };\n    } \n\n    const user = users.find((item: User) => item.email === form.email && item.password === form.password);\n\n    if (!user) {\n        return {\n            status: false,\n            user: null\n        };\n    }\n\n    return {\n        status: true,\n        user\n    };\n\n}\n\nexport const verifyCodeAcces = (code: string) => code === \"123456789\";\n\nexport const userExists = (email: string) => getUsers().some(item => item.email === email)\n\nexport const register = (user:IUser) => {\n    const users = getUsers();\n    const newUser = new User(user);\n    if (userExists(newUser.email)) {\n       return {status: false, data: null}; \n    }\n    users.push(newUser);\n    localStorage.setItem(\"users\", JSON.stringify(users))\n    return {status: true, data: newUser};\n}","import styled from \"@emotion/styled\";\nimport { IProps } from \".\";\n\nexport const ButtonWrapper = styled.button<IProps>`\n  border: 0;\n  outline: 0;\n  background-color: ${props => (props.variant === \"filled\" || props.variant === \"outlined\") ? props.color : 'transparent'};\n  padding: 8px;\n  color: ${props => props.variant === \"text\" ? '#666' : \"#fff\" };\n  font-style: normal;\n  line-height: 24px;\n  cursor: pointer;\n  min-width: 100px;\n  align-items: center;\n  display: flex;\n  justify-content: space-evenly;\n  ${props => props.rouned ? 'border-radius: 20px;' : null}\n`;\n","import { HTMLAttributes } from \"react\";\nimport { ButtonWrapper } from \"./styles\";\nexport interface IProps extends HTMLAttributes<HTMLButtonElement> {\n    color?: \"primary\" | \"divider\" | \"none\" | string;\n    variant?: \"outlined\" | \"filled\" | \"text\";\n    rouned?: boolean;\n}\nexport default function Button({color = \"primary\", variant = \"filled\", rouned = false, ...props}: IProps) {\n    const passedColor = color === \"primary\" ? \"#0067b8\" : (color === \"divider\" ? \"#ccc8c8\" : color);\n    return <ButtonWrapper color={passedColor} variant={variant} rouned={rouned} {...props}/>\n}","import styled from \"@emotion/styled\";\n\nexport const InputWrapper = styled.input`\n  border: 0;\n  border-bottom: 1px solid #0067b8;\n  &:hover {\n    border: 0;\n    outline: 0;\n    border-bottom: 2px solid #0067b8;\n  }\n  &:focus {\n    border: 0;\n    outline: 0;\n    border-bottom: 2px solid #0067b8;\n  }\n`;\n","import { HTMLAttributes } from \"react\";\nimport { InputWrapper } from \"./styles\";\n\nexport interface IProps extends HTMLAttributes<HTMLInputElement> {\n    type: string;\n    name?: string;\n    value?: any;\n}\nexport default function Input({type,name, ...rest}: IProps) {\n    return <InputWrapper type={type} name={name} {...rest} />\n}","import styled from '@emotion/styled';\nexport const MainFormWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n`\n\nexport const LogoWrapper = styled.div`\n    display: grid;\n    gap: 16px;\n`\n\nexport const FormUnputsWrapper = styled.div`\n    display: grid;\n    gap: 8px;\n`\n\n\nexport const ActionsWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n","import { FormUnputsWrapper, LogoWrapper, MainFormWrapper } from \"./styles\";\n\ninterface IProps {\n  title: string;\n  children: React.ReactNode;\n  description?: string;\n  back?: React.ReactNode;\n}\n\nexport default function MainForm(props: IProps) {\n  return (\n    <MainFormWrapper>\n      <LogoWrapper>\n        <img src=\"logoAjiCreative.png\" alt=\"Aji Creative\" />\n        {props.back}\n        <h1>{props.title}</h1>\n        {props.description && <p>{props.description}</p>}\n      </LogoWrapper>\n      <FormUnputsWrapper>{props.children}</FormUnputsWrapper>\n    </MainFormWrapper>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { verifyCodeAcces } from \"../../../api\";\nimport Button from \"../../../ui/Button\";\nimport Input from \"../../../ui/Input\";\nimport MainForm from \"../main-form\";\nimport { ActionsWrapper } from \"../main-form/styles\";\n\n\nexport default function CodeAccess() {\n  const [codeAcces, setCodeAcces] = useState(\"\");\n    const handleChange = ({currentTarget: {value}}: React.FormEvent<HTMLInputElement>) => {\n        setCodeAcces(value)\n    }\nconst history = useHistory();\n    const handleSuivant = () => {\n      if (verifyCodeAcces(codeAcces)) {\n        history.push('/inscription', { codeAcces })\n      } else {\n        alert(\"Wrong code access try another one\")\n      }\n    }\n  return (\n    <MainForm title=\"Code accés\">\n      <Input value={codeAcces} placeholder=\"Code accés communiqué par votre admin\" onChange={handleChange} type=\"text\"/>\n      <ActionsWrapper>\n        <Button onClick={handleSuivant}>Suivant</Button>\n      </ActionsWrapper>\n    </MainForm>\n  )\n}","import { IAction, IState } from \"../types\";\n\nconst initialState: IState = {\n  isLoggedIn: false,\n  user: null,\n};\n\nexport default function mainReducer(state = initialState, action: IAction) {\n  switch (action.type) {\n    case \"login\":\n      return {\n        ...state,\n        isLoggedIn: false,\n      } as IState;\n      case \"logged_in\":\n        return {\n          ...state,\n          isLoggedIn: true,\n          user: action.user,\n        } as IState;\n      default:\n      return state;\n  }\n}\n","import { all, put, takeEvery } from \"redux-saga/effects\";\nimport { IAction } from \"../types\";\n\nfunction* sign_in(action: IAction) {\n  \n\n  yield all([\n    put({\n      type: \"logged_in\",\n      user: action.user,\n    }),\n  ]);\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(\"login\", sign_in)]);\n}\n","import { applyMiddleware, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configureStore = () => {\n  const middlewares = sagaMiddleware;\n\n  const store = createStore(rootReducer, applyMiddleware(middlewares));\n\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport const store = configureStore()\n\n","import styled from \"@emotion/styled\";\n\nexport const MainLayoutWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const DashboardLayoutWrapper = styled.div`\n  display: grid;\n  grid-template-areas:\n    \"topbar topbar topbar topbar topbar topbar topbar topbar\"\n    \"sidebar content content content content content content content\";\n  gap: 4px;\n  /* align-items: center; */\n  justify-content: center;\n`;\n\nexport const TopBarWrapper = styled.div`\n  grid-area: topbar;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const SideBarWrapper = styled.div`\n  grid-column-start: -1;\n  grid-column-end: 1;\n  grid-area: sidebar;\n  background-color: #61d0d9;\n  \n`;\n\nexport const ContentWrapper = styled.div`\ngrid-column-start: 1;\n  grid-column-end: 11;\n  grid-area: content;\n  flex: 11;\n  background-color : #edf2f6;\n  min-width : 500px;\n  justify-content: space-between;\n  align-items: center;\n\n  \n`;\n\n\nexport const ProfileWrapper = styled.div`\npadding: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const ProfileAvatar = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n  height: 50px;\n  width: 50px;\n  border: 1px solid #666;\n  border-radius: 50%;\n  margin-right: 16px;\n`","import React from \"react\";\nimport { FaUser } from \"react-icons/fa\";\nimport { store } from \"../../store\";\nimport Button from \"../Button\";\nimport {\n  ContentWrapper,\n  DashboardLayoutWrapper,\n  MainLayoutWrapper,\n  ProfileAvatar,\n  ProfileWrapper,\n  SideBarWrapper,\n  TopBarWrapper\n} from \"./styles\";\n\ninterface IProps {\n  children: React.ReactNode;\n}\n\nexport const MainLayout = ({ children }: IProps) => {\n  return <MainLayoutWrapper>{children}</MainLayoutWrapper>;\n};\n\nconst Profile = () => {\n  const state = store.getState();\n  return <ProfileWrapper>\n      <ProfileAvatar >\n        <FaUser size={30}/>\n      </ProfileAvatar>\n        <strong>{state.user?.firstName.toLocaleUpperCase()}</strong>\n    </ProfileWrapper>\n}\n\nexport const DashboardLayout = ({ children }: IProps) => {\n  return (\n    <DashboardLayoutWrapper>\n      <TopBarWrapper>\n        <Button color=\"#61d0d9\" rouned >Actualité</Button>\n        <Profile/>\n      </TopBarWrapper>\n      <SideBarWrapper ><div style={{width: '10vh'}}></div></SideBarWrapper>\n      <ContentWrapper>{children}</ContentWrapper>\n    </DashboardLayoutWrapper>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport CodeAccess from \"../modules/Autentication/CodeAcces\";\nimport { store } from \"../store\";\nimport { MainLayout } from \"../ui/Layout\";\nexport default function CodeAccesPage() {\n  const [stateCopy, setStateCopy] = useState(store.getState())\n  const history = useHistory();\n  useEffect(() => {\n    setStateCopy(store.getState());\n  }, [store.getState()])\n  if (stateCopy.isLoggedIn) {\n    history.push(\"/\");\n    return null;\n  }\n  return <MainLayout><CodeAccess /></MainLayout>;\n}\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { userExists } from \"../../../api\";\nimport Button from \"../../../ui/Button\";\nimport Input from \"../../../ui/Input\";\nimport MainForm from \"../main-form\";\nimport { ActionsWrapper } from \"../main-form/styles\";\n\nexport default function Connexion() {\n  const [email, setEmail] = useState(\"\");\n  const handleChange = ({\n    currentTarget: { value },\n  }: React.FormEvent<HTMLInputElement>) => {\n    setEmail(value);\n  };\n  const history = useHistory();\n  const handleSuivant = () => {\n    if (!userExists(email)) {\n      alert(\"Please verify your email address Or register\");\n    } else history.push({ pathname: \"/password\", state: { email } });\n  };\n  const linkStyle = {\n    margin: \"1rem\",\n    textDecoration: \"none\",\n    color: 'blue'\n  };\n  return (\n    \n    <MainForm title=\"Connexion\">\n      <Input placeholder=\"E-mail\" onChange={handleChange} value={email} type=\"text\" />\n      <div>\n        Vous n'avez pas encore de compte ?{\" \"}\n        <Link to=\"/code-acces\" style={linkStyle}>Créez-en un !</Link>{\" \"}\n      </div>\n      <ActionsWrapper>\n        <Button onClick={handleSuivant}>Suivant</Button>\n      </ActionsWrapper>\n    </MainForm>\n  );\n}\n","import { useHistory } from \"react-router\";\nimport Connexion from \"../modules/Autentication/connexion\";\nimport { store } from \"../store\";\nimport { MainLayout } from \"../ui/Layout\";\nexport default function ConnexionPage() {\n  const state = store.getState();\n  const history = useHistory();\n  if (state.isLoggedIn) {\n    history.push(\"/\");\n    return null;\n  }\n  return <MainLayout><Connexion /></MainLayout>;\n}\n","import axios from \"axios\";\n\nconst PREFIX_API = \"/api/v1\";\n\nexport default axios.create({\n  baseURL: PREFIX_API,\n});\n","\ninterface IProps {\n    type: \"video\" | \"image\";\n    src: string\n}\n\n\nexport default function Media({type, src, ...rest}: IProps) {\n    return type === \"image\" ? <img src={src} {...rest} />: <iframe src={src} {...rest}/>;\n}","import styled from \"@emotion/styled\";\n\nexport const FeedItemWrapper = styled.div`\n  padding: 16px;\n  border: 1px solid #f1ebeb;\n  border-radius: 10px;\n  cursor: pointer;\n  &:hover {\n    box-shadow: 0px 0px 13px -6px rgba(0, 103, 184, 0.62);\n  }\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  background-color:#fff;\n`;\n\nexport const CardHeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const CardSubHeaderWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const CardBodyWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  margin-bottom: 20px;\n`;\n\nexport const CardFooterWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const DividerWrapper = styled.hr``;\n\nexport const TitleAndAvatarHeaderWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 11fr;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const AvatarWrapper = styled.div`\n  border-radius: 50%;\n  height: 35px;\n  width: 35px;\n  background-color: #666;\n`;\n\nexport const TitleHeaderWrapper = styled.div`\n  min-width: 100px;\n  max-width: 250px;\n  /* justify-content: space-around; */\n  display: flex;\n  align-items: center;\n  font-size: 0.8rem;\n  flex-wrap: wrap;\n`;\n\nexport const TitleWrapper = styled.div`\n  font-weight: 900;\n  font-size: 0.8rem;\n`;\nexport const AuthorOrDateWrapper = styled.div`\n  font-weight: 500;\n  font-size: 0.8rem;\n`;\n\nexport const AuthorAndDateWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nexport const ActionsWrapper = styled.strong`\n  font-size: 2rem;\n  font-weight: 400;\n  color: #666;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TitleSubHeaderWrapper = styled.strong`\n  font-size: 1.2rem;\n`;\n\nexport const URLWrapper = styled.a`\n  font-size: 1.2rem;\n  color: green;\n`;\n","import moment from \"moment\";\nimport React from \"react\";\nimport { FaHeart, FaMicrophone, FaShare } from \"react-icons/fa\";\nimport { IFeed } from \"../../../types\";\nimport Button from \"../../../ui/Button\";\nimport Media from \"../media\";\nimport {\n  ActionsWrapper,\n  AuthorAndDateWrapper,\n  AuthorOrDateWrapper,\n  AvatarWrapper,\n  CardBodyWrapper,\n  CardFooterWrapper,\n  CardHeaderWrapper,\n  CardSubHeaderWrapper,\n  DividerWrapper,\n  FeedItemWrapper,\n  TitleAndAvatarHeaderWrapper,\n  TitleHeaderWrapper,\n  TitleSubHeaderWrapper,\n  TitleWrapper,\n  URLWrapper\n} from \"./styles\";\n\ninterface IProps {\n  feed: IFeed;\n}\nexport default function FeedItem(props: IProps) {\n  return (\n    <FeedItemWrapper>\n      <CardHeaderWrapper>\n        <TitleAndAvatarHeaderWrapper>\n          <AvatarWrapper />\n          <TitleHeaderWrapper>\n            <TitleWrapper>{props.feed.source.name}</TitleWrapper>\n            <AuthorAndDateWrapper>\n              <AuthorOrDateWrapper>{props.feed.author}</AuthorOrDateWrapper>\n              <AuthorOrDateWrapper>\n                {moment(props.feed.publishedAt).format(\"MMMM Do YYYY, h:mm a\")}\n              </AuthorOrDateWrapper>\n            </AuthorAndDateWrapper>\n          </TitleHeaderWrapper>\n        </TitleAndAvatarHeaderWrapper>\n        <ActionsWrapper>...</ActionsWrapper>\n      </CardHeaderWrapper>\n      <CardSubHeaderWrapper>\n        <TitleSubHeaderWrapper>{props.feed.title}</TitleSubHeaderWrapper>\n        <URLWrapper target=\"_blank\" href={props.feed.url}>\n          {props.feed.source.name}\n        </URLWrapper>\n      </CardSubHeaderWrapper>\n      <CardBodyWrapper>\n        <Media\n          type={props.feed.source.name === \"YouTube\" ? \"video\" : \"image\"}\n          src={\n            props.feed.source.name === \"YouTube\"\n              ? props.feed.url.replace(\"watch?v=\",\"embed/\")\n              : props.feed.urlToImage\n          }\n        />\n        <h5>{props.feed.content}</h5>\n      </CardBodyWrapper>\n      <DividerWrapper />\n      <CardFooterWrapper>\n        <Button variant=\"text\">\n          <FaHeart /> 25 likes\n        </Button>\n        <Button variant=\"outlined\" color=\"divider\" rouned>\n          En parler <FaMicrophone />\n        </Button>\n        <Button variant=\"text\">\n          Partager <FaShare />\n        </Button>\n      </CardFooterWrapper>\n    </FeedItemWrapper>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const FeedWrappper = styled.div`\n    display: grid;\n    grid-template-columns: repeat(1, minmax(250px, 400px));\n    gap: 16px;\n`","import React, { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { IFeed } from \"../../../types\";\nimport api from \"../../../utils/api\";\nimport FeedItem from \"../feed-item\";\nimport { FeedWrappper } from \"./styles\";\n\nexport default function FeedList() {\n  const [page, setPage] = useState(1);\n  const [feeds, setFeeds] = useState<IFeed[]>([]);\n    const [count, setCount] = useState(0)\n  const fetchData = async () => {\n    const { data } = await api.get(\n      `https://newsapi.org/v2/top-headlines?country=ca&apiKey=b4709be0a02b4c7cbf0256c4bf9a6f00&page=${page}&pageSize=2`\n    );\n    if(page === 1) setCount(data.totalResults);\n    setTimeout(() => {\n        setFeeds([...feeds, ...data.articles]);\n    }, 200)\n  };\n\n  useEffect(() => {\n    fetchData()\n  }, [page])\n\n//   const articles = feeds.filter((item: IFeed) => item.urlToImage);\n\n  const handleFetch = () => {\n    setPage(page + 1);\n  };\nconst styles = {alignItems: 'center',\njustifyContent: 'center'\n }\n \n  return (\n      <InfiniteScroll \n        dataLength={count}\n        next={handleFetch}\n        hasMore={\n            feeds.length <= count\n        }\n        loader={<div></div>}\n        onScroll={handleFetch}\n      >\n            <FeedWrappper style ={styles} id=\"scrollableDiv\">\n        {feeds &&\n          feeds.map((item: IFeed) => (\n            <FeedItem key={item.content} feed={item} />\n          ))}\n    </FeedWrappper>\n      </InfiniteScroll>\n  );\n}\n","import { useHistory } from \"react-router\";\nimport FeedList from \"../modules/Dashboard/feed-list\";\nimport { store } from \"../store\";\nimport { DashboardLayout } from \"../ui/Layout\";\nexport default function DashboardPage() {\n  const state = store.getState();\n  console.log(state);\n\n  const history = useHistory();\n  if (!state.isLoggedIn) {\n    history.push(\"/connexion\");\n    return null;\n  }\n  return (\n    <DashboardLayout>\n      <FeedList />\n    </DashboardLayout>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Button from \"../../../ui/Button\";\nimport Input from \"../../../ui/Input\";\nimport MainForm from \"../main-form\";\nimport { ActionsWrapper } from \"../main-form/styles\";\n\nexport default function Inscrpiton() {\n  const [state, setState] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n  });\n  const handleChange = ({\n    currentTarget: { name, value },\n  }: React.FormEvent<HTMLInputElement>) => {\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n  const history = useHistory();\n  const handleClick = () => history.push({pathname: \"/password\", state: {...state}});\n  return (\n    <MainForm\n      title=\"Inscription\"\n      description=\"Nous avons besoin de quelques informations supplémentaires pour configuer votre compte.\"\n    >\n      <Input\n        placeholder=\"Prénom\"\n        name=\"firstName\"\n        onChange={handleChange}\n        type=\"text\"\n        value={state.firstName}\n      />\n      <Input\n        placeholder=\"Nom\"\n        name=\"lastName\"\n        onChange={handleChange}\n        type=\"text\"\n        value={state.lastName}\n      />\n      <Input\n        placeholder=\"E-mail\"\n        name=\"email\"\n        onChange={handleChange}\n        type=\"text\"\n        value={state.email}\n      />\n      <ActionsWrapper>\n        <Button onClick={handleClick}>Suivant</Button>\n      </ActionsWrapper>\n    </MainForm>\n  );\n}\n","import { useHistory } from \"react-router\";\nimport Inscrpiton from \"../modules/Autentication/inscription\";\nimport { store } from \"../store\";\nimport { MainLayout } from \"../ui/Layout\";\nexport default function InscriptionPage() {\n  const state = store.getState();\n  const history = useHistory();\n  if (state.isLoggedIn) {\n    history.push(\"/\");\n    return null;\n  }\n  return <MainLayout><Inscrpiton /></MainLayout>;\n}\n","import styled from '@emotion/styled';\r\n\r\n\r\nexport const EmailWrapper = styled.div`\r\n    height: 24px;\r\n    background: #fff;\r\n    margin-top: 16px;\r\n    display: block\r\n    font-family: \"Segoe UI Webfont\",-apple-system,\"Helvetica Neue\",\"Lucida Grande\",\"Roboto\",\"Ebrima\",\"Nirmala UI\",\"Gadugi\",\"Segoe Xbox Symbol\",\"Segoe UI Symbol\",\"Meiryo UI\",\"Khmer UI\",\"Tunga\",\"Lao UI\",\"Raavi\",\"Iskoola Pota\",\"Latha\",\"Leelawadee\",\"Microsoft YaHei UI\",\"Microsoft JhengHei UI\",\"Malgun Gothic\",\"Estrangelo Edessa\",\"Microsoft Himalaya\",\"Microsoft New Tai Lue\",\"Microsoft PhagsPa\",\"Microsoft Tai Le\",\"Microsoft Yi Baiti\",\"Mongolian Baiti\",\"MV Boli\",\"Myanmar Text\",\"Cambria Math\";\r\n    font-size: 15px;\r\n    line-height: 20px;\r\n    font-weight: 450;\r\n    cursor : pointer;\r\n`","import React, { useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { login, register } from \"../../../api\";\nimport { store } from \"../../../store\";\nimport { IUser } from \"../../../types\";\nimport Button from \"../../../ui/Button\";\nimport Input from \"../../../ui/Input\";\nimport MainForm from \"../main-form\";\nimport { ActionsWrapper } from \"../main-form/styles\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { EmailWrapper } from \"./styles\";\n\nexport default function Password() {\n\n  \n  const location = useLocation();\n  const history = useHistory()\n  const [password, setPassword] = useState(\"\");\n  const { state } = location;\n  const handleChange = ({\n    currentTarget: { value },\n  }: React.FormEvent<HTMLInputElement>) => {\n    setPassword(value);\n  };\n  const Back = () =>  <EmailWrapper onClick={handleback}><BiArrowBack />  {(state as any).email}</EmailWrapper>\n  ;\n\n  const handleback = () => {\n    history.push('/connexion');\n  }\n  const handleConnect = () => {\n    if ((state as any).firstName || (state as any).lastName) {\n      const registered = register({ ...(state as IUser), password });\n      if (registered.status) {\n        alert(\"You're being registered successfully !!!\");\n        store.dispatch({ type: \"login\", user: registered.data });\n        history.push('/');\n      } else {\n        alert(\"User already registered with this email, try another one !!!\");\n      }\n      \n    } else {\n      const loggedIn = login({ email: (state as any).email, password });\n      if (loggedIn.status) {\n        alert(\"You're being signed in successfully !!!\");\n        store.dispatch({ type: \"login\", user: loggedIn.user });\n        history.push('/');\n      } else {\n        alert(\"Wrong Pasword !!!\");\n      }\n    }\n  };\n\n\n  return (\n    <MainForm title=\"Entrez le mot de passe\" back={<Back />}>\n      <Input\n        placeholder=\"Mot de passe\"\n        onChange={handleChange}\n        type=\"password\"\n        value={password}\n      />\n      <ActionsWrapper>\n        <Button onClick={handleConnect}>Se Connecter</Button>\n      </ActionsWrapper>\n    </MainForm>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Password from \"../modules/Autentication/Password\";\nimport { store } from \"../store\";\nimport { MainLayout } from \"../ui/Layout\";\nexport default function PasswordPage() {\n  const [stateCopy, setStateCopy] = useState(store.getState())\n  useEffect(() => {\n    setStateCopy(store.getState());\n  }, [store.getState()])\n  const history = useHistory();\n  if (stateCopy.isLoggedIn) {\n    history.push(\"/\");\n    return null;\n  }\n  return <MainLayout><Password /></MainLayout>;\n}\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { login } from \"./api\";\nimport CodeAccesPage from \"./pages/code.acces.page\";\nimport ConnexionPage from \"./pages/connexion.page\";\nimport DashboardPage from \"./pages/dashboard.page\";\nimport InscriptionPage from \"./pages/inscription.page\";\nimport PasswordPage from \"./pages/password.page\";\n\nconst client = new QueryClient();\n\nconst MainWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  p {\n    max-width: 50ch;\n  }\n`;\n\nfunction App() {\n  return (\n    <QueryClientProvider client={client}>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={DashboardPage} />\n          <Route path=\"/connexion\" exact component={ConnexionPage} />\n          <Route path=\"/inscription\" exact component={InscriptionPage} />\n          <Route path=\"/password\" exact component={PasswordPage} />\n          <Route path=\"/code-acces\" exact component={CodeAccesPage} />\n          <Route path=\"/password\" exact component={PasswordPage} />\n        </Switch>\n      </Router>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}